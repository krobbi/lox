// Lynx
// Lox preprocessor.

// #import <call_main>
// #import "config/config.lox"
// #import "parser/parser.lox"
// #import "token/token_type.lox"

//// Uncomment to run tests:
//// #import "tests/run.lox"

// Parse the module at a configuration's main path.
fun parseMainModule(config) {
	var log = config.getLog();
	var mainPath = config.getMainPath();
	var stream = __fopenr(mainPath);
	
	if (!stream) {
		log.logError("Could not open '" + mainPath + "' for reading. File may not exist.");
		return;
	}
	
	var parser = Parser(config, mainPath, stream);
	var module = parser.parseModule();
	print "Parsed " + __ftoa(module.getStatements().getLength()) + " top-level statements.";
	
	if (__fclose(stream)) {
		log.logError("Parser did not close '" + mainPath + "' after parsing.");
	}
}

// Run Lynx from arguments and return an exit status code.
fun main(args) {
	var config = Config(args);
	var log = config.getLog();
	
	if (log.hasErrors()) {
		log.flush();
		return 1;
	}
	
	parseMainModule(config);
	
	if (log.hasErrors()) {
		log.flush();
		return 1;
	}
	
	return 0;
}

callMain(main);
