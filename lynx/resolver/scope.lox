// #import <list>
// #import <map>

// #import "symbol.lox"

// A scope of an AST.
class Scope {
	// Initialize the scope from its class type and function type.
	init(classType, functionType) {
		// The scope's class type.
		this._classType = classType;
		
		// The scope's function type.
		this._functionType = functionType;
		
		// A map of declared names to their symbols.
		this._symbols = Map();
	}
	
	// Get the scope's class type.
	getClassType() {
		return this._classType;
	}
	
	// Get the scope's function type.
	getFunctionType() {
		return this._functionType;
	}
	
	// Get an optional symbol from the scope from its name.
	getSymbol(name) {
		return this._symbols.get(name);
	}
	
	// Get a list of all declared but undefined symbols in the scope.
	getUndefinedSymbols() {
		var symbols = List();
		
		for (var iter = this._symbols.iter(); iter.hasNext();) {
			var name = iter.getNext();
			var symbol = this._symbols.get(name);
			
			if (!symbol.isDefined) {
				symbols.pushBack(symbol);
			}
		}
		
		return symbols;
	}
	
	// Declare a symbol in the scope from its name.
	declare(name) {
		this._symbols.set(name, Symbol());
	}
}
