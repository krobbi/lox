// An enumeration of characters.
class Char {
	// Initialize the character enumeration.
	init() {
		// An end-of-file character.
		this.EOF = -1;
		
		// A '`\0`' character.
		this.NUL = 0;
		
		// A `'\t'` character.
		this.TAB = 9;
		
		// A `'\n'` character.
		this.LF = 10;
		
		// A `'\r'` character.
		this.CR = 13;
		
		// A `' '` character.
		this.SPACE = __chrat(" ", 0);
		
		// A `'"'` character.
		this.QUOTE = 34;
		
		// A `'\''` character.
		this.APOSTROPHE = __chrat("'", 0);
		
		// A `'/'` character.
		this.SLASH = __chrat("/", 0);
		
		// A `'\\'` character.
		this.BACKSLASH = __chrat("\", 0);
		
		// A `'~'` character.
		this.TILDE = __chrat("~", 0);
	}
	
	// Get whether a character is whitespace.
	isWhitespace(char) {
		return char == this.SPACE or char == this.TAB or char == this.LF or char == this.CR;
	}
	
	// Escape a character to a string.
	escape(char) {
		if (char == this.EOF) {
			return "\{EOF}";
		} else if (char == this.NUL) {
			return "\0";
		} else if (char == this.TAB) {
			return "\t";
		} else if (char == this.LF) {
			return "\n";
		} else if (char == this.CR) {
			return "\r";
		} else if (char == this.QUOTE or char == this.APOSTROPHE or char == this.BACKSLASH) {
			return "\" + __strof(char);
		} else if (char >= this.SPACE and char <= this.TILDE) {
			return __strof(char);
		} else {
			return "\x??"; // Hex encoding is not implemented.
		}
	}
}

// The enumeration of characters.
var Char = Char();
