// Visits AST nodes.
class Visitor {
	// Initialize the visitor.
	init() {}
	
	// Visit a node.
	visit(node) {
		return node.visit(this);
	}
	
	// Visit a node with no defined visitor behavior.
	visitDefault(node) {
		return nil;
	}
	
	// Visit an expression statement node.
	visitExprStmt(node) {
		return this.visitDefault(node);
	}
	
	// Visit a grouping expression node.
	visitGroupingExpr(node) {
		return this.visitDefault(node);
	}
	
	// Visit a literal expression node.
	visitLiteralExpr(node) {
		return this.visitDefault(node);
	}
	
	// Visit a module node.
	visitModule(node) {
		return this.visitDefault(node);
	}
	
	// Visit a super expression node.
	visitSuperExpr(node) {
		return this.visitDefault(node);
	}
	
	// Visit a this expression node.
	visitThisExpr(node) {
		return this.visitDefault(node);
	}
	
	// Visit a variable expression node.
	visitVariableExpr(node) {
		return this.visitDefault(node);
	}
}
