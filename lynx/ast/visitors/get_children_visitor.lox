// Visits AST nodes and returns their children as lists.
class GetChildrenVisitor < Visitor {
	// Initialize the get children visitor.
	init() {
		super.init();
	}
	
	// Get a node's children.
	visitDefault(node) {
		return List();
	}
	
	// Get a grouping expression node's children.
	visitGroupingExpr(node) {
		return this._createUnary(node.getExpression());
	}
	
	// Get an expression statement node's children.
	visitExprStmt(node) {
		return this._createUnary(node.getExpression());
	}
	
	// Get a module node's children.
	visitModule(node) {
		return node.getStatements();
	}
	
	// Create a unary child list.
	_createUnary(child) {
		var children = List();
		children.pushBack(child);
		return children;
	}
}
